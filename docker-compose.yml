version: '3.8'

services:
  # Redis for secret storage
  redis:
    image: redis:7-alpine
    container_name: vaultify-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - vaultify-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Vaultify server
  vaultify-server:
    build:
      context: .
      dockerfile: docker/server.Dockerfile
    container_name: vaultify-server
    restart: unless-stopped
    ports:
      - "8080:8080"  # gRPC
      - "8081:8081"  # HTTP
    environment:
      - VAULTIFY_SERVER_GRPC_PORT=8080
      - VAULTIFY_SERVER_HTTP_PORT=8081
      - VAULTIFY_SERVER_HOST=0.0.0.0
      - VAULTIFY_SERVER_BASE_URL=http://localhost:8081
      - VAULTIFY_REDIS_ADDRESS=redis:6379
      - VAULTIFY_REDIS_PASSWORD=
      - VAULTIFY_REDIS_DB=0
      - VAULTIFY_AUDIT_LOG_FILE=/app/logs/audit.log
      - VAULTIFY_AUDIT_SECRET_KEY=your-secret-audit-key-change-in-production
      - VAULTIFY_CRYPTO_DEFAULT_TTL=24h
      - VAULTIFY_CRYPTO_MAX_TTL=168h
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - vaultify-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Vaultify CLI (for testing)
  vaultify-cli:
    build:
      context: .
      dockerfile: docker/cli.Dockerfile
    container_name: vaultify-cli
    environment:
      - VAULTIFY_SERVER=vaultify-server:8080
    networks:
      - vaultify-network
    depends_on:
      vaultify-server:
        condition: service_healthy
    profiles:
      - cli  # Only start when specifically requested

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: vaultify-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/ssl/certs
    networks:
      - vaultify-network
    depends_on:
      - vaultify-server
    profiles:
      - production  # Only start in production profile

volumes:
  redis_data:
    driver: local

networks:
  vaultify-network:
    driver: bridge